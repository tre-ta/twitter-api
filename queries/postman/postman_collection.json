{
	"info": {
		"_postman_id": "ee5625d5-6202-4c1c-8153-b2aabfd4bd71",
		"name": "Case ITAU - API requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Insert documents from default hashtags",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://127.0.0.1:8000/?htag=openbanking&htag=remediation&htag=devops&htag=sre&htag=microservices&htag=observability&htag=oauth&htag=metrics&htag=logmonitoring&htag=opentracing",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						""
					],
					"query": [
						{
							"key": "htag",
							"value": "openbanking"
						},
						{
							"key": "htag",
							"value": "remediation"
						},
						{
							"key": "htag",
							"value": "devops"
						},
						{
							"key": "htag",
							"value": "sre"
						},
						{
							"key": "htag",
							"value": "microservices"
						},
						{
							"key": "htag",
							"value": "observability"
						},
						{
							"key": "htag",
							"value": "oauth"
						},
						{
							"key": "htag",
							"value": "metrics"
						},
						{
							"key": "htag",
							"value": "logmonitoring"
						},
						{
							"key": "htag",
							"value": "opentracing"
						}
					]
				},
				"description": "Insert default hashtags to database. It uses the public method `get_tweets(hashtag)`"
			},
			"response": []
		},
		{
			"name": "Insert documents from single hashtag",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://127.0.0.1:8000/?htag=sre",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						""
					],
					"query": [
						{
							"key": "htag",
							"value": "sre"
						}
					]
				},
				"description": "Variation of the \"Insert documents from default hashtags\" one. Showing that it works from 0 to several hashtags.\n\nIt's in a descending order."
			},
			"response": []
		},
		{
			"name": "Get the 5 users with the most followers from the database",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/most-followed-users",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"most-followed-users"
					]
				},
				"description": "It's using the public method `get_most_followed_users`."
			},
			"response": []
		},
		{
			"name": "Get the total number of posts by hashtag, aggregated by language",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/total-hashtag-lang",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"total-hashtag-lang"
					]
				},
				"description": "It's using the public method `get_total_tweets_by_hashtag_lang`.\n\nIt's in a descending order."
			},
			"response": []
		},
		{
			"name": "Get total tweets by hour of the day",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/total-per-hour",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"total-per-hour"
					]
				},
				"description": "It's using the public method `get_total_tweets_by_hour`.\n\nIt's in a descending order."
			},
			"response": []
		},
		{
			"name": "Get the Swagger documentation",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/docs",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"docs"
					]
				},
				"description": "This is automatically generated by the library I'm using for creating my API."
			},
			"response": []
		},
		{
			"name": "Get the metrics endpoint",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/metrics",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"metrics"
					]
				},
				"description": "Endpoint where Prometheus metrics are exported."
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}